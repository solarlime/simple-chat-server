# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

env:
  DEPLOY_PATH: /var/www
  GITHUB_REPO: simple-chat-server

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Linting & Testing
        run: yarn run lint

      - name: Building
        run: yarn run build

      - name: Make directory if there isn't
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_SSH }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          script: cd ${{ env.DEPLOY_PATH }} && mkdir -p ${{ env.GITHUB_REPO }}

      - name: Pre-deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          key: ${{ secrets.DEPLOY_SERVER_SSH }}
          source: "./package.json, ./yarn.lock, ./dist, Dockerfile"
          target: ${{ env.DEPLOY_PATH }}/${{ env.GITHUB_REPO }}

      - name: Resolving dependencies & Restarting
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_SSH }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/${{ env.GITHUB_REPO }}
            docker buildx build -t ${{ env.GITHUB_REPO }} .
            docker container stop ${{ env.GITHUB_REPO }}
            PORT=${{ secrets.ENV_PORT }} docker run --name ${{ env.GITHUB_REPO }} --rm -d -p ${{ secrets.ENV_PORT }}:${{ secrets.ENV_PORT }} -e PORT ${{ env.GITHUB_REPO }}

      - name: preview-url
        run: |
          echo "Deployed at the server!"
